<?xml version="1.0"?>
<launch>
  <!-- velodyne driver -->
  <!-- declare arguments with default values -->
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
  <arg name="device_ip" default="" />
  <arg name="frame_id" default="velodyne" />
  <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
  <arg name="max_range" default="130.0" />
  <arg name="min_range" default="0.4" />
  <arg name="pcap" default="" />
  <arg name="port" default="2368" />
  <arg name="read_fast" default="false" />
  <arg name="read_once" default="false" />
  <arg name="repeat_delay" default="0.0" />
  <arg name="rpm" default="600.0" />
  <arg name="cut_angle" default="-0.01" />
  <arg name="laserscan_ring" default="-1" />
  <arg name="laserscan_resolution" default="0.007" />

  <!-- start nodelet manager and driver nodelets -->
  <include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
    <arg name="device_ip" value="$(arg device_ip)"/>
    <arg name="frame_id" value="$(arg frame_id)"/>
    <arg name="manager" value="$(arg manager)" />
    <arg name="model" value="VLP16"/>
    <arg name="pcap" value="$(arg pcap)"/>
    <arg name="port" value="$(arg port)"/>
    <arg name="read_fast" value="$(arg read_fast)"/>
    <arg name="read_once" value="$(arg read_once)"/>
    <arg name="repeat_delay" value="$(arg repeat_delay)"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="cut_angle" value="$(arg cut_angle)"/>
  </include>

  <!-- start cloud nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
    <arg name="calibration" value="$(arg calibration)"/>
    <arg name="manager" value="$(arg manager)" />
    <arg name="max_range" value="$(arg max_range)"/>
    <arg name="min_range" value="$(arg min_range)"/>
  </include>

  <!-- start laserscan nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/laserscan_nodelet.launch">
    <arg name="manager" value="$(arg manager)" />
    <arg name="ring" value="$(arg laserscan_ring)"/>
    <arg name="resolution" value="$(arg laserscan_resolution)"/>
  </include>

  <!-- velodyne nodelet manager -->
  <!-- arguments -->
  <arg name="nodelet_manager" default="velodyne_nodelet_manager" />
  <!--<node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/> -->

  <node pkg="nodelet" type="nodelet" name="hdl_people_detection_nodelet" args="load hdl_people_tracking/HdlPeopleDetectionNodelet $(arg nodelet_manager)">
  	<param name="static_sensor" value="true"/>
    <!-- <param name="downsample_resolution" value="0.1"/> -->
    <param name="downsample_resolution" value="0.05"/>
    <!-- background subtraction params -->
    <param name="backsub_resolution" value="0.2"/>
    <param name="backsub_occupancy_thresh" value="2"/>
    <!-- clustering params -->
    <!-- <param name="cluster_min_pts" value="10"/> -->
    <param name="cluster_min_pts" value="25"/>
    <param name="cluster_max_pts" value="2048"/>
    <param name="cluster_min_size_x" value="0.2"/>
    <param name="cluster_min_size_y" value="0.2"/>
    <!-- <param name="cluster_min_size_z" value="0.3"/>
    <param name="cluster_max_size_x" value="1.0"/>
    <param name="cluster_max_size_y" value="1.0"/> -->
    <param name="cluster_min_size_z" value="0.2"/>
    <param name="cluster_max_size_x" value="1.5"/>
    <param name="cluster_max_size_y" value="1.5"/>
    <param name="cluster_max_size_z" value="2.0"/>
    <!-- classification params -->
    <param name="enable_classification" value="false"/>
  </node>

  <node pkg="nodelet" type="nodelet" name="hdl_people_tracking_nodelet" args="load hdl_people_tracking/HdlPeopleTrackingNodelet $(arg nodelet_manager)">
    <!-- tracks with larger covariance matrix trace than this value will be removed -->
    <param name="remove_trace_thresh" value="1.0"/>
    <param name="human_radius" value="0.4"/>
  </node>

  <!-- Danger Table and Risk Factor -->
  <node pkg="hdl_people_tracking" type="danger_table.py" name="danger_table"/>

  <!-- Danger Table and Risk Factor -->
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="framerate" value="10" />
    <param name="image_width" value="1920" />
    <param name="image_height" value="1080" />
    <param name="pixel_format" value="mjpeg" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>

  <!-- Rviz -->
  <node pkg="rviz" type="rviz" name="lidar_rviz" args="-d $(find hdl_localization)/rviz/hdl_localization_.rviz"/>
</launch>
